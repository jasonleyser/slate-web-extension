{"version":3,"sources":["App.module.css","Contexts/ModalProvider.js","Components/Icons.js","Components/Button.js","Components/Image.js","Components/Metadata.js","Components/Modal.js","Components/Loader.js","Components/Screenshot.js","App.js","index.js"],"names":["module","exports","ModalContext","React","createContext","ModalProvider","children","useState","query","title","document","description","url","window","location","href","pageData","useEffect","addEventListener","event","source","Provider","value","Close","props","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","stroke-linecap","stroke-linejoin","Bookmark","className","classes","modalButtonSVGItem","style","marginLeft","paddingTop","Tag","Plus","marginTop","marginRight","cx","cy","r","x1","y1","x2","y2","Settings","strokeWidth","strokeLinecap","strokeLinejoin","Button","svg","icon","onClick","e","preventDefault","postMessage","run","data","modalButtonMain","modalButtonSVG","modalButtonText","text","Image","metadataImage","src","Metadata","slice","length","metadata","metadataBox","image","metadataBox2","metaDataTitle","metadataCloseIcon","type","display","lineHeight","favicon","metadataUrl","URL","hostname","Modal","show","setTags","handleCloseModal","Consumer","id","modalWindow","modalBody","modalContent","modalButtonBox","shortcut","modalBackground","Loader","visable","setVisable","status","error","upload","setUpload","cid","timer","setTimeout","clearTimeout","Footer","loaderFooterLeft","loaderFooterRight","color","fontWeight","textDecoration","target","loaderWindow","loaderContent","loaderText","loaderImage","loaderClose","loaderFooter","require","App","isOpened","setIsOpened","isUploading","setIsUploading","setIsScreenshot","og","setOg","meta","getMeta","querySelector","getAttribute","keyName","onKeyDown","handle","bind","this","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b26ea256.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-window\":\"App_modal-window__IwfL_\",\"modalWindow\":\"App_modalWindow__1u8Cs\",\"modalBackground\":\"App_modalBackground__1q5C2\",\"modal-window-inner-border\":\"App_modal-window-inner-border__3MRqC\",\"modal-handle\":\"App_modal-handle__2h2q9\",\"modalContent\":\"App_modalContent__1NR5A\",\"modal-content-drawer-handle\":\"App_modal-content-drawer-handle__2YtXY\",\"modal-close-button\":\"App_modal-close-button__1PY0Y\",\"modalBody\":\"App_modalBody__7YUnL\",\"modalButtonBox\":\"App_modalButtonBox__2bcEx\",\"modalButton\":\"App_modalButton__3hnlb\",\"modalButtonMain\":\"App_modalButtonMain__3EngT\",\"modalButtonSVG\":\"App_modalButtonSVG__XODJy\",\"modalButtonSVGItem\":\"App_modalButtonSVGItem__a8rdr\",\"modalButtonText\":\"App_modalButtonText__3qD5w\",\"modalButtonShortcut\":\"App_modalButtonShortcut__E5_Yt\",\"slateButtonSelected\":\"App_slateButtonSelected__l79IW\",\"modalSearchBar\":\"App_modalSearchBar__3WVHj\",\"modalSearchInput\":\"App_modalSearchInput__3sUxK\",\"metadataCloseIcon\":\"App_metadataCloseIcon__3jkyy\",\"metadata\":\"App_metadata__3J-0D\",\"metadataBox\":\"App_metadataBox__2Aexa\",\"metadataImage\":\"App_metadataImage__2ohRy\",\"metadataBox2\":\"App_metadataBox2__3p5m2\",\"metaDataTitle\":\"App_metaDataTitle__25qMT\",\"modalCloseButton\":\"App_modalCloseButton__3aBs9\",\"metaDataUrl\":\"App_metaDataUrl__2WYL9\",\"loaderWindow\":\"App_loaderWindow__1Eclj\",\"loaderBody\":\"App_loaderBody__1v8-C\",\"loaderContent\":\"App_loaderContent__3iTcb\",\"loaderText\":\"App_loaderText__1ROCI\",\"loaderBox\":\"App_loaderBox__1qVVH\",\"loaderImage\":\"App_loaderImage__31l14\",\"loaderFooter\":\"App_loaderFooter__2bpu5\",\"loaderFooterRight\":\"App_loaderFooterRight__3o5l4\",\"loaderFooterLeft\":\"App_loaderFooterLeft__3IBvn\",\"loaderClose\":\"App_loaderClose__xEwdJ\",\"loaderFadeOut\":\"App_loaderFadeOut__RfYI8\",\"loaderFadeIn\":\"App_loaderFadeIn__3H4DX\",\"hiddenModal\":\"App_hiddenModal__2dsNp\",\"visableModal\":\"App_visableModal__1zisE\",\"modalSearchItem\":\"App_modalSearchItem__3WuRH\",\"modalSearchLoading\":\"App_modalSearchLoading__QrsB8\",\"modalSearchDropdown\":\"App_modalSearchDropdown__3deU8\"};","import React, { useEffect, useState } from 'react';\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const [search, setSearch] = useState({ query: null });\n\n  const [pageData, setPageData] = useState({ \n    title: document.title,\n    description: document.description,\n    url: window.location.href\n  });\n\n  useEffect(() => { \n    window.addEventListener(\"message\", function(event) {\n      if (event.source !== window) return;\n    });\n  }, []);\n\n  return (\n    <ModalContext.Provider value={{ pageData }}>\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","import React from 'react';\nimport classes from '../App.module.css';\n\nexport const Close = (props) => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M15 5L5 15\" stroke=\"#48494A\" stroke-width=\"1.25\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M5 5L15 15\" stroke=\"#48494A\" stroke-width=\"1.25\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n  );\n};\n\nexport const Bookmark = (props) => {\n  return(\n    <svg className={classes.modalButtonSVGItem} style={{ marginLeft: '2px', paddingTop: '4px' }} width=\"14\" height=\"16\" viewBox=\"0 0 16 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M15 19L8 14L1 19V3C1 2.46957 1.21071 1.96086 1.58579 1.58579C1.96086 1.21071 2.46957 1 3 1H13C13.5304 1 14.0391 1.21071 14.4142 1.58579C14.7893 1.96086 15 2.46957 15 3V19Z\" stroke=\"#00050A\" stroke-width=\"1.875\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n  )\n}\n\nexport const Tag = (props) => {\n  return(\n    <svg className={classes.modalButtonSVGItem} style={{ paddingTop: '4px' }} width=\"16\" height=\"16\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M19.59 12.41L12.42 19.58C12.2343 19.766 12.0137 19.9135 11.7709 20.0141C11.5281 20.1148 11.2678 20.1666 11.005 20.1666C10.7422 20.1666 10.4819 20.1148 10.2391 20.0141C9.99632 19.9135 9.77575 19.766 9.59 19.58L1 11V1H11L19.59 9.59C19.9625 9.96473 20.1716 10.4716 20.1716 11C20.1716 11.5284 19.9625 12.0353 19.59 12.41V12.41Z\" stroke=\"#00050A\" stroke-width=\"1.875\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n  )\n}\n\nexport const Plus = (props) => {\n  return(\n    <svg \n        className={classes.modalButtonSVGItem} \n        style={{ marginTop: '4px', marginRight: '-6px' }} \n        xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"16\" \n        height=\"16\" \n        viewBox=\"0 0 24 24\" \n        fill=\"none\" \n        stroke=\"#00050A\" \n        stroke-width=\"2\" \n        stroke-linecap=\"round\" \n        stroke-linejoin=\"round\"\n      >\n      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n      <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>\n      <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\n    </svg>\n  )\n}\n\nexport const Settings = (props) => {\n  return(\n    <svg\n      style={{ marginTop: '4px', marginRight: '-6px' }}\n      width=\"16\" \n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"#00050A\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"3\" />\n      <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n    </svg>\n  )\n}","import React, { useState } from 'react';\nimport * as Icons from '../Components/Icons';\nimport classes from '../App.module.css';\n\nconst Button = (props) => {\n\n\tlet svg;\n\tif(props.icon == 'tag') {\n\t\tsvg = <Icons.Tag />\n\t}else if(props.icon == 'bookmark'){\n\t\tsvg = <Icons.Bookmark />\n\t}else if(props.icon == 'plus'){\n\t\tsvg = <Icons.Plus />\n\t}else if(props.icon == 'settings'){\n\t\tsvg = <Icons.Settings />\n\t}\n\n\tconst handleClick = (e) => {\n\t\te.preventDefault();\n\t\twindow.postMessage({ run: props.run, url: props.data.url }, \"*\");\n\t}\n\n\treturn(\n\t\t<>\n\t\t\t<div\n\t\t\t\tonClick={handleClick}\n\t\t\t\tclassName={classes.modalButtonMain}\n\t\t\t>\n\t\t\t\t<div className={classes.modalButtonSVG}>\n\t\t\t\t\t{svg}\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.modalButtonText}>\n\t\t\t\t\t{props.text}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Button;\n\n","import React, { useState } from 'react';\nimport classes from '../App.module.css';\n\nconst Image = (props) => {\n\treturn(\n\t\t<>\n\t\t\t<img className={classes.metadataImage} src={props.url} width={props.width} height={props.height} />\n\t\t</>\n\t);\n};\n\nexport default Image;\n\n","import React, { useState } from 'react';\nimport Image from '../Components/Image';\nimport * as Icons from '../Components/Icons';\nimport classes from '../App.module.css';\n\nconst Metadata = (props) => {\n\n\tlet count = 25;\n\tlet title = props.data.title.slice(0, count) + (props.data.title.length > count ? \"...\" : \"\");\n\n\tconst getHostname = (url) => {\n\t  return new URL(url).hostname;\n\t}\n\n    const handleCloseModal = () => {\n\t\twindow.postMessage({ type: \"CLOSE_APP\" }, \"*\");\n    }\n\n\treturn(\n\t\t<>\n\t\t\t<div className={classes.metadata}>\n\t\t\t\t<div className={classes.metadataBox}>\n\t\t\t\t\t<Image \n\t\t\t\t\t  url={props.image}\n\t\t\t\t\t  width=\"48px\"\n\t\t\t\t\t  height=\"48px\" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t            <div className={classes.metadataBox2}>\n\t\t\t\t\t<div className={classes.metaDataTitle}>{title}\n\t\t\t\t\t\t<div className={classes.metadataCloseIcon} onClick={handleCloseModal}>\n\t\t\t\t\t\t\t<Icons.Close />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ display: 'flex', lineHeight: '12px' }}>\n\t\t\t\t\t\t<img src={props.favicon} width=\"14px\" height=\"14px\" style={{ display: 'inline', marginRight: '8px' }} />\n\t\t\t\t\t\t<div className={classes.metadataUrl}>\n\t\t\t\t\t\t\t{getHostname(props.data.url)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Metadata;","import React, { useState, useEffect } from 'react';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport Button from '../Components/Button';\nimport Metadata from '../Components/Metadata';\nimport classes from '../App.module.css';\n\nconst Modal = (props) => {\n  const [search, setSearch] = useState({ query: null });\n  const [loading, setLoading] = useState(true);\n  const [tags, setTags] = useState({ show: false });\n  const [og, setOg] = useState({ image: null, title: null });\n\n  const handleCloseModal = () => {\n    window.postMessage({ type: \"CLOSE_APP\" }, \"*\");\n  }\n\n  window.addEventListener(\"message\", function(event) {\n    if(event.data.type === \"LOAD_APP_WITH_TAGS\") {\n      setTags({ show: true })\n    }\n  });\n\n  return (\n    <ModalContext.Consumer>\n      {({ pageData }) => (\n      <>\n        <div id=\"modal\" className={classes.modalWindow}>\n          <div className={classes.modalBody}>\n            <div className={classes.modalContent}>\n              {/*\n                <div className={classes.modalSearchBar}>\n                  <Search />\n                </div>\n              */}\n              <Metadata\n                data={pageData} \n                image={props.image} \n                favicon={props.favicon}\n              />\n\n              <div className={classes.modalButtonBox}>\n                <Button \n                  text=\"Bookmark current page\"\n                  shortcut=\"Option B\"\n                  icon=\"bookmark\"\n                  run=\"SAVE_LINK\"\n                  data={pageData}\n                />\n\n                <Button \n                  text=\"Add channel tags\"\n                  shortcut=\"Option C\"\n                  icon=\"tag\"\n                />\n\n                <Button \n                  text=\"Settings\"\n                  shortcut=\"Option C\"\n                  icon=\"settings\"\n                  run=\"OPEN_SETTINGS\"\n                  data={pageData}\n                />                 \n              </div>\n              {/*tags.show ? (\n                <h2>Show tags now</h2>\n              ) : (\n                <h2>Dont show tags</h2>\n              )*/}\n            </div>\n          </div>\n        </div>\n        <div className={classes.modalBackground} onClick={handleCloseModal}></div>\n      </>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport * as Icons from '../Components/Icons';\nimport classes from '../App.module.css';\n\nconst Loader = (props) => {\n  const [visable, setVisable] = useState(true);\n  const [upload, setUpload] = useState({ status: 'uploading', data: null, error: false });\n\n  const handleCloseModal = () => {\n    setVisable(false)\n  }\n\n  window.addEventListener(\"message\", function(event) {\n    if(event.data.type === \"UPLOAD_DONE\") {\n      setUpload({ \n        status: 'complete', \n        data: event.data.data.cid \n      }) \n      const timer = setTimeout(() => {\n        handleCloseModal()\n      }, 10000);\n      return () => clearTimeout(timer);\n    }\n\n    if(event.data.type === \"UPLOAD_FAIL\") {\n      setUpload({ status: 'error' }) \n    }\n\n    if(event.data.type === \"UPLOAD_DUPLICATE\") {\n      setUpload({ \n        status: 'duplicate', \n        data: event.data.data.cid \n      }) \n    }\n  });\n\n  let count = 28;\n  let title = props.title.slice(0, count) + (props.title.length > count ? \"...\" : \"\");\n\n  const Footer = (props) => {\n    let url = ((props.upload.data) ? `https://slate.host/_/data?cid=${props.upload.data}` : null);\n    return (\n        <>\n          {props.upload.status === 'uploading' &&\n            <div className={classes.loaderFooterLeft}>Saving...</div>\n          }\n\n          {props.upload.status === 'complete' &&\n            <>\n              <div className={classes.loaderFooterLeft}>Saved</div>\n              <div className={classes.loaderFooterRight}>\n                <a href={url} style={{ color: '#0084FF', fontWeight: '600', textDecoration: 'none' }} target=\"_blank\">\n                  View\n                </a>\n              </div>\n            </>\n          }\n\n          {props.upload.status === 'duplicate' &&\n            <>\n              <div className={classes.loaderFooterLeft} style={{ color: '#34D159'}}>Already exists</div>\n              <div className={classes.loaderFooterRight}>\n                <a href={url} style={{ color: '#0084FF', fontWeight: '600', textDecoration: 'none' }} target=\"_blank\">\n                  View\n                </a>\n              </div>\n            </>\n          }\n\n          {props.upload.status === 'error' &&\n            <div className={classes.loaderFooterLeft} style={{ color: '#FF4530' }}>Failed to save</div>\n          }\n        </>\n      )\n  }\n\n  return (\n    <ModalContext.Consumer>\n      {({ pageData }) => (\n        <>\n        {visable &&\n          <div id=\"modal\" className={classes.loaderWindow }>\n            <div className={classes.loaderContent}>\n              <div className={classes.loaderText}>\n                <img className={classes.loaderImage} src={props.image} />\n                {title}\n                <div onClick={handleCloseModal} className={classes.loaderClose}>\n                  <Icons.Close />\n                </div>\n              </div>\n              <div className={classes.loaderFooter}>\n                <Footer upload={upload} />\n              </div>\n            </div>\n          </div>\n        }\n        </>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect, createRef } from 'react';\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport Button from '../Components/Button';\nimport Metadata from '../Components/Metadata';\nimport Image from '../Components/Image';\nimport Search from '../Components/Search';\nimport classes from '../App.module.css';\nimport { useScreenshot } from 'use-react-screenshot'\n\nconst fetch = require('node-fetch');\n\nconst Screenshot = (props) => {\n  const pageTitle =  document.title;\n  const modalTitle = `Take a screenshot of ${pageTitle}`;\n  const count = 25;\n  const title = modalTitle.slice(0, count) + (modalTitle.length > count ? \"...\" : \"\");\n\n  const [visable, setVisable] = useState(true);\n  const [hidden, setHidden] = useState(false);\n  const [upload, setUpload] = useState({ status: false, data: null, title: title });\n  const [screenshotTaken, setScreenshotTaken] = useState(false);\n\n  const ref = createRef(null)\n  const [image, takeScreenshot] = useScreenshot()\n  const getImage = () => {\n    takeScreenshot(ref.current)\n    console.log('screenshot taken now')\n  }\n\n  const handleCloseModal = () => {\n    setVisable(false)\n  }\n\n  const onLoadHover = () => {\n    console.log('hovering now')\n  }\n\n  const handleKeydown = (e) => {\n    console.log('this is the key press event from loader', e)\n  }\n\n  window.addEventListener(\"message\", function(event) {\n    if(event.data.type === \"SCREENSHOT_TAKEN\") {\n      console.log('this is the data from the screenshot done event', event)\n      setScreenshotTaken(true)\n      setVisable(true);\n    }\n    if(event.data.type === \"SCREENSHOT_DONE\") {\n      console.log('this is the data from the screenshot is uploaded hi event', event)\n      setUpload({ status: true, data: event.data.data.data.cid, title: 'Screenshot uploaded' })\n      setVisable(true);\n    }\n  });\n\n  const loaderClose = () => {\n    setUpload({ status: false, title: title})\n    setScreenshotTaken(false)\n    setVisable(false)\n  }\n\n  const takeFullPage = () => {\n    setVisable(false)\n    window.postMessage({ type: \"TAKE_SCREENSHOT\" }, \"*\");\n  }\n\n  const handleGoBack = () => {\n    console.log('go back')\n  }\n\n  function FooterMain(props) {\n    return (\n      <>\n        <div className={classes.loaderFooterLeft}>\n          <a \n            onClick={takeFullPage}\n            style={{ color: '#0084FF', fontWeight: '600', textDecoration: 'none', cursor: 'pointer' }}\n          >\n            Full screen\n          </a>\n        </div>\n        <div className={classes.loaderFooterRight}>\n          <a \n            onClick={getImage}\n            style={{ color: '#0084FF', fontWeight: '600', textDecoration: 'none', cursor: 'pointer'}}\n          >\n            Select area\n          </a>\n        </div>\n      </>\n    );\n  }\n\n  function FooterUploading(props) {\n    return (\n      <>\n        <div className={classes.loaderFooterLeft}>Saving...</div>\n      </>\n    );\n  }\n\n  function FooterDone(props) {\n    //let url = `https://slate.host/_/data?cid=${upload.data}`;\n    let url = `https://slate-dev.onrender.com/_/data?cid=${props.cid}`;\n    return (\n      <>\n        <div className={classes.loaderFooterLeft}>Saved</div>\n        <div className={classes.loaderFooterRight}>\n          <a href={url} style={{ color: '#0084FF', fontWeight: '600', textDecoration: 'none', cursor: 'pointer' }} target=\"_blank\">\n            View\n          </a>\n        </div>\n      </>\n    );\n  }\n\n  let footer = <FooterMain />\n\n  if (screenshotTaken) {\n    footer = <FooterUploading />;\n  }\n\n  if (upload.status) {\n    footer = <FooterDone cid={upload.data} />;\n  }\n\n  return (\n    <div className={hidden ? classes.hiddenModal : classes.visableModal }>\n      <ModalContext.Consumer>\n        {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId, pageData }) => (\n          <>\n          {visable ?\n            <div id=\"modal\" className={classes.loaderWindow } onMouseEnter={onLoadHover}>\n              <div className={classes.loaderBody}>\n                <div className={classes.loaderContent}>\n                  <div className={classes.loaderText}>\n                    <div className={classes.loaderImage} onClick={handleGoBack}> \n                      ←\n                    </div>\n                    {upload.title}\n                    <div onClick={loaderClose} className={classes.loaderClose}>X</div>\n                  </div>\n                  <div className={classes.loaderFooter}>\n                    {footer}\n                  </div>\n                </div>\n              </div>\n            </div>\n          :\n            <div></div>\n          }\n          </>\n        )}\n      </ModalContext.Consumer>\n    </div>\n  );\n};\n\nexport default Screenshot;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './Components/Modal';\nimport Loader from './Components/Loader';\nimport Screenshot from './Components/Screenshot';\nimport ModalProvider from './Contexts/ModalProvider';\nimport Hotkeys from 'react-hot-keys';\nrequire('typeface-inter');\n\n\nfunction App() {\n  const [isOpened, setIsOpened] = useState(true);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isScreenshot, setIsScreenshot] = useState(false);\n  const [og, setOg] = useState({ image: null, title: null });\n\n  function onKeyDown(keyName, e, handle) {\n    if(keyName === 'esc') {\n      setIsOpened(false)\n    }\n\n    if(keyName === 'alt+b') {\n      window.postMessage({ run: 'OPEN_LOADING', url: window.location.href }, \"*\");\n    }\n  }\n\n  window.addEventListener(\"message\", function(event) {\n    if(event.data.type === \"UPLOAD_START\") {\n      setIsOpened(false)\n      setIsUploading(true)\n    }\n\n    if(event.data.type === \"CLOSE_APP\") {\n      setIsOpened(false)\n    }\n\n    if(event.data.type === \"OPEN_LOADING\") {\n      setIsOpened(false)\n      setIsUploading(true)\n    }\n    if(event.data.type === \"OPEN_SCREENSHOT_SHORTCUT\") {\n      setIsOpened(false)\n      setIsScreenshot(true)\n    }\n  });\n\n  useEffect(() => {\n    let meta = getMeta();\n    setOg({ image: meta.image, favicon: meta.favicon })\n  }, []);\n\n  const getMeta = () => {\n    let meta = {};\n\n    if(document.querySelector(\"meta[property='og:image']\")){\n      meta.image = document.querySelector(\"meta[property='og:image']\").getAttribute('content');\n    } else {\n      meta.image = \"https://slate.textile.io/ipfs/bafkreidwm3g5q4vm32j42yofeccacjqhpbm2u3j4gq4rnsihg54zsmz6pi\"\n    }\n\n    if(document.querySelector(\"link[rel~='icon']\")){\n      meta.favicon = document.querySelector(\"link[rel~='icon']\").getAttribute('href');\n    }\n\n    return meta;\n  }\n\n  return (\n    <>\n      {isOpened &&\n        <ModalProvider>\n          <div>\n            <Hotkeys \n              keyName=\"esc,alt+b\" \n              onKeyDown={onKeyDown.bind(this)}\n            >\n              <Modal\n                image={og.image}\n                favicon={og.favicon}\n              />\n            </Hotkeys>\n          </div>\n        </ModalProvider>\n      }\n      {isUploading &&\n        <Loader \n          image={og.image}\n          title={document.title}\n        />\n      }\n      {/*\n        isScreenshot &&\n        <Screenshot />\n      */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </>, document.getElementById('modal-window'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}