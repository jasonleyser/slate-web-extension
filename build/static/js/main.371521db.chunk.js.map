{"version":3,"sources":["App.module.css","Hooks/useWindowPosition.js","Contexts/ModalProvider.js","Components/Button.js","Components/Image.js","Components/Metadata.js","Components/Modal.js","Components/Loader.js","Components/Screenshot.js","App.js","index.js"],"names":["module","exports","useWindowPosition","windowPosition","x","y","ModalContext","React","createContext","ModalProvider","children","useState","undefined","extensionId","setExtensionId","query","title","document","description","url","window","location","href","pageData","useEffect","addEventListener","event","console","log","source","data","type","Provider","value","getExtensionId","postMessage","Bookmark","className","classes","modalButtonSVGItem","style","marginLeft","paddingTop","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","stroke-linecap","stroke-linejoin","Tag","Plus","marginTop","marginRight","cx","cy","r","x1","y1","x2","y2","Settings","strokeWidth","strokeLinecap","strokeLinejoin","Button","props","svg","icon","onClick","e","preventDefault","run","modalButtonMain","modalButtonSVG","modalButtonText","text","Image","metadataImage","src","Metadata","slice","length","metadata","metadataBox","image","metadataBox2","metaDataTitle","position","display","right","cursor","lineHeight","favicon","metadataUrl","URL","hostname","Modal","show","tags","setTags","documentData","handleCloseModal","Consumer","hasDraggedWindowPosition","id","modalWindow","modalBody","modalContent","modalSearchBar","margin","overflow","borderRadius","modalButtonBox","shortcut","modalBackground","Loader","require","visable","setVisable","status","error","upload","setUpload","onLoadHover","cid","timer","setTimeout","clearTimeout","loaderClose","Footer","loaderFooterLeft","loaderFooterRight","color","fontWeight","textDecoration","target","loaderWindow","onMouseEnter","loaderContent","loaderText","loaderImage","loaderFooter","App","isOpened","setIsOpened","isUploading","setIsUploading","setIsScreenshot","og","setOg","meta","getMeta","querySelector","getAttribute","keyName","onKeyDown","handle","bind","this","onKeyUp","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.371521db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-window\":\"App_modal-window__IwfL_\",\"modalWindow\":\"App_modalWindow__1u8Cs\",\"modalBackground\":\"App_modalBackground__1q5C2\",\"modal-window-inner-border\":\"App_modal-window-inner-border__3MRqC\",\"modal-handle\":\"App_modal-handle__2h2q9\",\"modalContent\":\"App_modalContent__1NR5A\",\"modal-content-drawer-handle\":\"App_modal-content-drawer-handle__2YtXY\",\"modal-close-button\":\"App_modal-close-button__1PY0Y\",\"modalBody\":\"App_modalBody__7YUnL\",\"modalButtonBox\":\"App_modalButtonBox__2bcEx\",\"modalButton\":\"App_modalButton__3hnlb\",\"modalButtonMain\":\"App_modalButtonMain__3EngT\",\"modalButtonSVG\":\"App_modalButtonSVG__XODJy\",\"modalButtonSVGItem\":\"App_modalButtonSVGItem__a8rdr\",\"modalButtonText\":\"App_modalButtonText__3qD5w\",\"modalButtonShortcut\":\"App_modalButtonShortcut__E5_Yt\",\"slateButtonSelected\":\"App_slateButtonSelected__l79IW\",\"modalSearchBar\":\"App_modalSearchBar__3WVHj\",\"modalSearchInput\":\"App_modalSearchInput__3sUxK\",\"modalCloseButton\":\"App_modalCloseButton__3aBs9\",\"metadata\":\"App_metadata__3J-0D\",\"metadataBox\":\"App_metadataBox__2Aexa\",\"metadataImage\":\"App_metadataImage__2ohRy\",\"metadataBox2\":\"App_metadataBox2__3p5m2\",\"metaDataTitle\":\"App_metaDataTitle__25qMT\",\"metaDataUrl\":\"App_metaDataUrl__2WYL9\",\"loaderWindow\":\"App_loaderWindow__1Eclj\",\"loaderBody\":\"App_loaderBody__1v8-C\",\"loaderContent\":\"App_loaderContent__3iTcb\",\"loaderText\":\"App_loaderText__1ROCI\",\"loaderBox\":\"App_loaderBox__1qVVH\",\"loaderImage\":\"App_loaderImage__31l14\",\"loaderFooter\":\"App_loaderFooter__2bpu5\",\"loaderFooterRight\":\"App_loaderFooterRight__3o5l4\",\"loaderFooterLeft\":\"App_loaderFooterLeft__3IBvn\",\"loaderClose\":\"App_loaderClose__xEwdJ\",\"loaderFadeOut\":\"App_loaderFadeOut__RfYI8\",\"loaderFadeIn\":\"App_loaderFadeIn__3H4DX\",\"hiddenModal\":\"App_hiddenModal__2dsNp\",\"visableModal\":\"App_visableModal__1zisE\",\"modalSearchItem\":\"App_modalSearchItem__3WuRH\",\"modalSearchLoading\":\"App_modalSearchLoading__QrsB8\",\"modalSearchDropdown\":\"App_modalSearchDropdown__3deU8\"};","\nconst useWindowPosition = () => {\n  return {\n    windowPosition:  { x: 100, y: 100 },\n  }\n};\n\nexport default useWindowPosition;\n","import React, { useEffect, useState } from 'react';\nimport useWindowPosition from '../Hooks/useWindowPosition';\n\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const { windowPosition } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n  const [search, setSearch] = useState({ query: null });\n\n  const [pageData, setPageData] = useState({ \n    title: document.title,\n    description: document.description,\n    url: window.location.href\n  });\n\n  function getExtensionId() {\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\n  }\n\n  useEffect(() => { \n    // Set up event listeners from Content script\n    window.addEventListener(\"message\", function(event) {\n      console.log('this is a messgae from the modal ModalProvider')\n      if (event.source !== window) return;\n      if (event.data.type && (event.data.type === \"EXTENSION_ID_RESULT\")) {\n        setExtensionId(event.data.extensionId);\n      }\n    });\n  }, []);\n\n  console.log('document', pageData)\n\n  return (\n    <ModalContext.Provider\n      value={{\n        extensionId,\n        getExtensionId,\n        windowPosition,\n        pageData,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","import React, { useState } from 'react';\nimport classes from '../App.module.css';\n\nconst Bookmark = () => {\n\treturn(\n\t\t<svg className={classes.modalButtonSVGItem} style={{ marginLeft: '2px', paddingTop: '4px' }} width=\"14\" height=\"16\" viewBox=\"0 0 16 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M15 19L8 14L1 19V3C1 2.46957 1.21071 1.96086 1.58579 1.58579C1.96086 1.21071 2.46957 1 3 1H13C13.5304 1 14.0391 1.21071 14.4142 1.58579C14.7893 1.96086 15 2.46957 15 3V19Z\" stroke=\"#00050A\" stroke-width=\"1.875\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n\t\t</svg>\n\t)\n}\n\nconst Tag = () => {\n\treturn(\n\t\t<svg className={classes.modalButtonSVGItem} style={{ paddingTop: '4px' }} width=\"16\" height=\"16\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M19.59 12.41L12.42 19.58C12.2343 19.766 12.0137 19.9135 11.7709 20.0141C11.5281 20.1148 11.2678 20.1666 11.005 20.1666C10.7422 20.1666 10.4819 20.1148 10.2391 20.0141C9.99632 19.9135 9.77575 19.766 9.59 19.58L1 11V1H11L19.59 9.59C19.9625 9.96473 20.1716 10.4716 20.1716 11C20.1716 11.5284 19.9625 12.0353 19.59 12.41V12.41Z\" stroke=\"#00050A\" stroke-width=\"1.875\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n\t\t</svg>\n\t)\n}\n\nconst Plus = () => {\n\treturn(\n\t\t<svg className={classes.modalButtonSVGItem} style={{ marginTop: '4px', marginRight: '-6px' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#00050A\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n\t\t\t<circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n\t\t\t<line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>\n\t\t\t<line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\n\t\t</svg>\n\t)\n}\n\nconst Settings = () => {\n\treturn(\n\t\t<svg\n\t\t\tstyle={{ marginTop: '4px', marginRight: '-6px' }}\n\t\t\twidth=\"16\" \n\t\t\theight=\"20\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"#00050A\"\n\t\t\tstrokeWidth=\"2\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t>\n\t\t\t<circle cx=\"12\" cy=\"12\" r=\"3\" />\n\t\t\t<path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n\t\t</svg>\n\t)\n}\n\nconst Button = (props) => {\n\n\tlet svg;\n\tif(props.icon == 'tag') {\n\t\tsvg = <Tag />\n\t}else if(props.icon == 'bookmark'){\n\t\tsvg = <Bookmark />\n\t}else if(props.icon == 'plus'){\n\t\tsvg = <Plus />\n\t}else if(props.icon == 'settings'){\n\t\tsvg = <Settings />\n\t}\n\n\tlet selected = 'slate-button-selected';\n\n\tconst handleClick = (e) => {\n\t\te.preventDefault();\n\t\twindow.postMessage({ run: props.run, url: props.data.url }, \"*\");\n\t}\n\n\treturn(\n\t\t<>\n\t\t\t<div\n\t\t\t\tonClick={handleClick}\n\t\t\t\tclassName={classes.modalButtonMain}\n\t\t\t>\n\t\t\t\t<div className={classes.modalButtonSVG}>\n\t\t\t\t\t{svg}\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.modalButtonText}>\n\t\t\t\t\t{props.text}\n\t\t\t\t</div>\n\t\t\t\t{/*\n\t\t\t\t<div>\n\t\t\t\t\t{props.shortcut}\n\t\t\t\t</div>\n\t\t\t\t*/}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Button;\n\n","import React, { useState } from 'react';\nimport classes from '../App.module.css';\n\nconst Image = (props) => {\n\treturn(\n\t\t<>\n\t\t\t<img className={classes.metadataImage} src={props.url} width={props.width} height={props.height} />\n\t\t</>\n\t);\n};\n\nexport default Image;\n\n","import React, { useState } from 'react';\nimport Image from '../Components/Image';\nimport classes from '../App.module.css';\n\nconst Metadata = (props) => {\n\n\tlet count = 25;\n\tlet title = props.title.slice(0, count) + (props.title.length > count ? \"...\" : \"\");\n\n\tconst getHostname = (url) => {\n\t  return new URL(url).hostname;\n\t}\n\n    const handleCloseModal = () => {\n\t\twindow.postMessage({ type: \"CLOSE_APP\" }, \"*\");\n    }\n\n\treturn(\n\t\t<>\n\t\t\t<div className={classes.metadata}>\n\t\t\t\t<div className={classes.metadataBox}>\n\t\t\t\t\t<Image \n\t\t\t\t\t  url={props.image}\n\t\t\t\t\t  width=\"48px\"\n\t\t\t\t\t  height=\"48px\" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t            <div className={classes.metadataBox2}>\n\t\t\t\t\t<div className={classes.metaDataTitle}>{title}\n\t\t\t\t\t\t<div style={{ position: 'absolute', display: 'inline', right: '24px', cursor: 'pointer' }} onClick={handleCloseModal}>\n\t\t\t\t\t\t\t<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t\t<path d=\"M15 5L5 15\" stroke=\"#48494A\" stroke-width=\"1.25\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n\t\t\t\t\t\t\t\t<path d=\"M5 5L15 15\" stroke=\"#48494A\" stroke-width=\"1.25\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ display: 'flex', lineHeight: '12px' }}>\n\t\t\t\t\t\t<img src={props.favicon} width=\"14px\" height=\"14px\" style={{ display: 'inline', marginRight: '8px' }} /><div className={classes.metadataUrl}>{getHostname(props.url)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Metadata;","import React, { useState, useEffect } from 'react';\nimport { X } from 'react-feather';\nimport Draggable from 'react-draggable';\nimport { HotKeys } from \"react-hotkeys\";\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport Button from '../Components/Button';\nimport Metadata from '../Components/Metadata';\nimport Image from '../Components/Image';\nimport Search from '../Components/Search';\nimport Hotkeys from 'react-hot-keys';\nimport classes from '../App.module.css';\n\nfunction onKeyUp(keyName, e, handle) {\n  console.log(\"test:onKeyUp\", e, handle)\n}\nfunction onKeyDown(keyName, e, handle) {\n  console.log(\"test:onKeyDown\", keyName, e, handle)\n}\n\nconst Modal = (props) => {\n  const [search, setSearch] = useState({ query: null });\n  const [loading, setLoading] = useState(false);\n  const [tags, setTags] = useState({ show: false });\n  const [og, setOg] = useState({ image: null, title: null });\n\n  const [documentData, setDocumentData] = useState({ \n    title: document.title,\n    description: document.description,\n    url: window.location.href\n  });\n\n  /*\n  useEffect(() => {\n    setDocumentData({\n      title: document.title,\n      description: document.description,\n      url: window.location.href\n    })\n  });\n  \n\n  function getLocalData() {\n    setDocumentData({ \n      title: document.title,\n      description: document.description,\n      url: window.location.href\n    });\n  }\n\n  getLocalData();\n  \n\n  const handleSearchChange = async (e) => {\n    let checkType = e.target.value.includes(\"†\")\n    if(checkType) {\n      let final = e.target.value.replace(\"†\", \"type:\");\n      setSearch({ query: final });\n      return;\n    }\n\n    let checkFrom = e.target.value.includes(\"ƒ\")\n    if(checkFrom) {\n      let final = e.target.value.replace(\"ƒ\", \"from:\");\n      setSearch({ query: final });\n      return;\n    }\n\n    setSearch({ query: e.target.value });\n  }\n\n  const handleSearch = (e) => {\n    console.log('event: ', e)\n    if(e.key === \"Enter\") {\n      window.postMessage({ \n        type: \"OPEN_SEARCH\", \n        query: e.target.value \n      }, \"*\");\n    }\n\n    if(e.key === \"Escape\") {\n      window.postMessage({ \n        type: \"CLOSE_APP\", \n      }, \"*\");\n    }\n\n    if(e.key === \"Escape\") {\n      window.postMessage({ \n        type: \"CLOSE_APP\", \n      }, \"*\");\n    }\n  }\n  */\n\n\n  const handleCloseModal = () => {\n    window.postMessage({ type: \"CLOSE_APP\" }, \"*\");\n  }\n\n  const onKeyPressed = (e) => {\n    console.log(e.key);\n  }\n\n  window.addEventListener(\"message\", function(event) {\n    console.log('yes an event was called in the modal', event);\n\n    if(event.data.type === \"LOAD_APP_WITH_TAGS\") {\n      setTags({ show: true })\n    }\n  });\n\n  console.log('the tag state: ', tags)\n\n  return (\n    <ModalContext.Consumer>\n      {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId, pageData }) => (\n      <>\n        <div id=\"modal\"  className={classes.modalWindow}>\n          <div className={classes.modalBody}>\n            <div className={classes.modalContent}>\n              <div className={classes.modalSearchBar}>\n                {/*\n                <Search />\n                */}\n              </div>\n\n              <Metadata \n                url={documentData.url} \n                title={documentData.title} \n                image={props.image} \n                favicon={props.favicon}\n              />\n\n              <div \n                style={{ margin: '0 auto', overflow: \"auto\", width: '352px', height: \"142px\", borderRadius: '12px'}}\n                className={classes.modalButtonBox}\n              >\n                {/*\n                <Button \n                  text=\"Take a Screenshot\"\n                  shortcut=\"Option A\"\n                  icon=\"tag\"\n                  run=\"OPEN_SCREENSHOT\"\n                  data={pageData}\n                />\n                */}\n\n                <Button \n                  text=\"Bookmark current page\"\n                  shortcut=\"Option B\"\n                  icon=\"bookmark\"\n                  run=\"SAVE_LINK\"\n                  data={pageData}\n                />\n\n                <Button \n                  text=\"Add channel tags\"\n                  shortcut=\"Option C\"\n                  icon=\"tag\"\n                />\n\n                <Button \n                  text=\"Settings\"\n                  shortcut=\"Option C\"\n                  icon=\"settings\"\n                  run=\"OPEN_SETTINGS\"\n                  data={pageData}\n                />                 \n              </div>\n              {/*tags.show ? (\n                <h2>Show tags now</h2>\n              ) : (\n                <h2>Dont show tags</h2>\n              )*/}\n            </div>\n          </div>\n        </div>\n        <div \n          className={classes.modalBackground}\n          onClick={handleCloseModal}\n        ></div>\n      </>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport { HotKeys } from \"react-hotkeys\";\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport Button from '../Components/Button';\nimport Metadata from '../Components/Metadata';\nimport Image from '../Components/Image';\nimport Hotkeys from 'react-hot-keys';\nimport classes from '../App.module.css';\n\nconst fetch = require('node-fetch');\nconst og = require('open-graph');\n\nconst Loader = (props) => {\n  const [visable, setVisable] = useState(true);\n  const [upload, setUpload] = useState({ status: 'uploading', data: null, error: false });\n\n  const handleCloseModal = () => {\n    setVisable(false)\n  }\n\n  const onLoadHover = () => {\n    console.log('hovering now')\n  }\n\n  const handleKeydown = (e) => {\n    console.log('this is the key press event from loader', e)\n  }\n\n  window.addEventListener(\"message\", function(event) {\n    if(event.data.type === \"UPLOAD_DONE\") {\n      setUpload({ status: 'complete', data: event.data.data.cid }) \n      const timer = setTimeout(() => {\n        handleCloseModal()\n      }, 10000);\n      return () => clearTimeout(timer);\n    }\n\n    if(event.data.type === \"UPLOAD_FAIL\") {\n      setUpload({ status: 'error' }) \n    }\n\n    if(event.data.type === \"UPLOAD_DUPLICATE\") {\n      setUpload({ status: 'duplicate', data: event.data.data.cid }) \n    }\n  });\n\n  let count = 28;\n  let title = props.title.slice(0, count) + (props.title.length > count ? \"...\" : \"\");\n\n  const loaderClose = () => {\n    setVisable(false)\n  }\n\n  const Footer = (props) => {\n    let url;\n    if(props.upload.data) {\n      url = `https://slate.host/_/data?cid=${props.upload.data}`;\n    }\n    return (\n        <>\n          {props.upload.status === 'uploading' &&\n            <div className={classes.loaderFooterLeft}>Saving...</div>\n          }\n\n          {props.upload.status === 'complete' &&\n            <>\n              <div className={classes.loaderFooterLeft}>Saved</div>\n              <div className={classes.loaderFooterRight}>\n                <a href={url} style={{ color: '#0084FF', fontWeight: '600', textDecoration: 'none' }} target=\"_blank\">\n                  View\n                </a>\n              </div>\n            </>\n          }\n\n          {props.upload.status === 'duplicate' &&\n            <>\n              <div className={classes.loaderFooterLeft} style={{ color: '#34D159'}}>Already exists</div>\n              <div className={classes.loaderFooterRight}>\n                <a href={url} style={{ color: '#0084FF', fontWeight: '600', textDecoration: 'none' }} target=\"_blank\">\n                  View\n                </a>\n              </div>\n            </>\n          }\n\n          {props.upload.status === 'error' &&\n            <div className={classes.loaderFooterLeft} style={{ color: '#FF4530' }}>Failed to save</div>\n          }\n\n        </>\n      )\n  }\n\n  return (\n    <ModalContext.Consumer>\n      {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId, pageData }) => (\n        <>\n        {visable &&\n          <div id=\"modal\" className={classes.loaderWindow } onMouseEnter={onLoadHover}>\n            <div className={classes.loaderContent}>\n              <div className={classes.loaderText}>\n                <img className={classes.loaderImage} src={props.image} />\n                {title}\n                <div onClick={loaderClose} className={classes.loaderClose}>\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M15 5L5 15\" stroke=\"#48494A\" stroke-width=\"1.25\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                    <path d=\"M5 5L15 15\" stroke=\"#48494A\" stroke-width=\"1.25\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                  </svg>\n                </div>\n              </div>\n              <div className={classes.loaderFooter}>\n                <Footer upload={upload} />\n              </div>\n            </div>\n          </div>\n        }\n        </>\n      )}\n    </ModalContext.Consumer>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect, createRef } from 'react';\nimport { X } from 'react-feather';\nimport Draggable from 'react-draggable';\nimport { HotKeys } from \"react-hotkeys\";\nimport { ModalContext } from '../Contexts/ModalProvider';\nimport Button from '../Components/Button';\nimport Metadata from '../Components/Metadata';\nimport Image from '../Components/Image';\nimport Search from '../Components/Search';\nimport Hotkeys from 'react-hot-keys';\nimport classes from '../App.module.css';\nimport { useScreenshot } from 'use-react-screenshot'\n\nconst fetch = require('node-fetch');\n\nconst Screenshot = (props) => {\n  const pageTitle =  document.title;\n  const modalTitle = `Take a screenshot of ${pageTitle}`;\n  const count = 25;\n  const title = modalTitle.slice(0, count) + (modalTitle.length > count ? \"...\" : \"\");\n\n  const [visable, setVisable] = useState(true);\n  const [hidden, setHidden] = useState(false);\n  const [upload, setUpload] = useState({ status: false, data: null, title: title });\n  const [screenshotTaken, setScreenshotTaken] = useState(false);\n\n  const ref = createRef(null)\n  const [image, takeScreenshot] = useScreenshot()\n  const getImage = () => {\n    takeScreenshot(ref.current)\n    console.log('screenshot taken now')\n  }\n\n  const handleCloseModal = () => {\n    setVisable(false)\n  }\n\n  const onLoadHover = () => {\n    console.log('hovering now')\n  }\n\n  const handleKeydown = (e) => {\n    console.log('this is the key press event from loader', e)\n  }\n\n  window.addEventListener(\"message\", function(event) {\n    if(event.data.type === \"SCREENSHOT_TAKEN\") {\n      console.log('this is the data from the screenshot done event', event)\n      setScreenshotTaken(true)\n      setVisable(true);\n    }\n    if(event.data.type === \"SCREENSHOT_DONE\") {\n      console.log('this is the data from the screenshot is uploaded hi event', event)\n      setUpload({ status: true, data: event.data.data.data.cid, title: 'Screenshot uploaded' })\n      setVisable(true);\n    }\n  });\n\n  const loaderClose = () => {\n    setUpload({ status: false, title: title})\n    setScreenshotTaken(false)\n    setVisable(false)\n  }\n\n  const takeFullPage = () => {\n    setVisable(false)\n    window.postMessage({ type: \"TAKE_SCREENSHOT\" }, \"*\");\n  }\n\n  const handleGoBack = () => {\n    console.log('go back')\n  }\n\n  function FooterMain(props) {\n    return (\n      <>\n        <div className={classes.loaderFooterLeft}>\n          <a \n            onClick={takeFullPage}\n            style={{ color: '#0084FF', fontWeight: '600', textDecoration: 'none', cursor: 'pointer' }}\n          >\n            Full screen\n          </a>\n        </div>\n        <div className={classes.loaderFooterRight}>\n          <a \n            onClick={getImage}\n            style={{ color: '#0084FF', fontWeight: '600', textDecoration: 'none', cursor: 'pointer'}}\n          >\n            Select area\n          </a>\n        </div>\n      </>\n    );\n  }\n\n  function FooterUploading(props) {\n    return (\n      <>\n        <div className={classes.loaderFooterLeft}>Saving...</div>\n      </>\n    );\n  }\n\n  function FooterDone(props) {\n    //let url = `https://slate.host/_/data?cid=${upload.data}`;\n    let url = `https://slate-dev.onrender.com/_/data?cid=${props.cid}`;\n    return (\n      <>\n        <div className={classes.loaderFooterLeft}>Saved</div>\n        <div className={classes.loaderFooterRight}>\n          <a href={url} style={{ color: '#0084FF', fontWeight: '600', textDecoration: 'none', cursor: 'pointer' }} target=\"_blank\">\n            View\n          </a>\n        </div>\n      </>\n    );\n  }\n\n  let footer = <FooterMain />\n\n  if (screenshotTaken) {\n    footer = <FooterUploading />;\n  }\n\n  if (upload.status) {\n    footer = <FooterDone cid={upload.data} />;\n  }\n\n  return (\n    <div className={hidden ? classes.hiddenModal : classes.visableModal }>\n      <ModalContext.Consumer>\n        {({ windowPosition, hasDraggedWindowPosition, extensionId, getExtensionId, pageData }) => (\n          <>\n          {visable ?\n            <div id=\"modal\" className={classes.loaderWindow } onMouseEnter={onLoadHover}>\n              <div className={classes.loaderBody}>\n                <div className={classes.loaderContent}>\n                  <div className={classes.loaderText}>\n                    <div className={classes.loaderImage} onClick={handleGoBack}> \n                      ←\n                    </div>\n                    {upload.title}\n                    <div onClick={loaderClose} className={classes.loaderClose}>X</div>\n                  </div>\n                  <div className={classes.loaderFooter}>\n                    {footer}\n                  </div>\n                </div>\n              </div>\n            </div>\n          :\n            <div></div>\n          }\n          </>\n        )}\n      </ModalContext.Consumer>\n    </div>\n  );\n};\n\nexport default Screenshot;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Modal from './Components/Modal';\nimport Loader from './Components/Loader';\nimport Screenshot from './Components/Screenshot';\nimport ModalProvider from './Contexts/ModalProvider';\nimport Hotkeys from 'react-hot-keys';\nrequire('typeface-inter');\n\n\nfunction App() {\n  const [isOpened, setIsOpened] = useState(true);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isScreenshot, setIsScreenshot] = useState(false);\n  const [og, setOg] = useState({ image: null, title: null });\n\n  function onKeyUp(keyName, e, handle) {\n    console.log(\"test:onKeyUp\", e, handle)\n  }\n\n  function onKeyDown(keyName, e, handle) {\n    console.log(\"test:onKeyDown\", keyName)\n\n    if(keyName == 'esc') {\n      setIsOpened(false)\n    }\n\n    if(keyName == 'alt+b') {\n      console.log('save a bookmark')\n      window.postMessage({ run: 'OPEN_LOADING', url: window.location.href }, \"*\");\n      /*\n      window.postMessage({\n          type: \"SAVE_LINK\",\n          url: window.location.href\n      }, \"*\");\n      */\n    }\n  }\n\n  window.addEventListener(\"message\", function(event) {\n    console.log('there is a message in the app')\n    if(event.data.type === \"UPLOAD_START\") {\n      setIsOpened(false)\n      setIsUploading(true)\n    }\n\n    if(event.data.type === \"CLOSE_APP\") {\n      setIsOpened(false)\n    }\n\n    if(event.data.type === \"OPEN_LOADING\") {\n      setIsOpened(false)\n      setIsUploading(true)\n    }\n    if(event.data.type === \"OPEN_SCREENSHOT_SHORTCUT\") {\n      setIsOpened(false)\n      //window.postMessage({ type: \"TAKE_SCREENSHOT\" }, \"*\");\n      setIsScreenshot(true)\n    }\n  });\n\n  useEffect(() => {\n    let meta = getMeta();\n    setOg({ image: meta.image, favicon: meta.favicon })\n  }, []);\n\n  const getMeta = () => {\n    let meta = {\n      image: null,\n      favicon: null\n    }\n\n    if(document.querySelector(\"meta[property='og:image']\")){\n      meta.image = document.querySelector(\"meta[property='og:image']\").getAttribute('content');\n    } else {\n      meta.image = \"https://slate.textile.io/ipfs/bafkreidwm3g5q4vm32j42yofeccacjqhpbm2u3j4gq4rnsihg54zsmz6pi\"\n    }\n\n    if(document.querySelector(\"link[rel~='icon']\")){\n      meta.favicon = document.querySelector(\"link[rel~='icon']\").getAttribute('href');\n    }\n\n    return meta;\n  }\n\n  return (\n    <>\n      {isOpened &&\n        <ModalProvider>\n          <div>\n            <Hotkeys \n              keyName=\"alt+s,esc,alt+b\" \n              onKeyDown={onKeyDown.bind(this)}\n              onKeyUp={onKeyUp.bind(this)}\n            >\n              <Modal\n                image={og.image}\n                favicon={og.favicon}\n              />\n            </Hotkeys>\n          </div>\n        </ModalProvider>\n      }\n      {isUploading &&\n        <Loader \n          image={og.image}\n          title={document.title}\n        />\n      }\n      {/*\n        isScreenshot &&\n        <Screenshot />\n      */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </>, document.getElementById('modal-window'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}